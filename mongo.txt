  setup: use mu

Question 1:

  db.createCollection('orders')

Question 2:     I did these seperately because they got way too confusing trying to add them all at once.

  db.orders.insert([{orderDate: new Date("2050-08-08"), orderTotal: "$137.45", lineItems : [{unitPrice: ".25"}, {quantity: "550"}, {productName: "Cheeto Fingertip Cleaners"}]}])
  db.orders.insert([{orderDate: new Date("2010-01-08"), orderTotal: "$6.34", lineItems : [{unitPrice: "6.34"}, {quantity: "1"}, {productName: "Cheetos Party Size"}]}])
  db.orders.insert([{orderDate: new Date("2005-07-07"), orderTotal: "$1,345.63", lineItems : [{unitPrice: "100"}, {quantity: "14"}, {productName: "Regret"}]}])

Question 3:

  db.orders.findOne()

Question 4:

  db.orders.find().pretty()


Question 5:

  db.orders.find({orderDate: {$lt: new Date("2016-01-01")}}).pretty()

Question 6:

db.orders.find({orderDate: {$gt: new Date("2016-01-01")}}).pretty()


Question 7:

  db.orders.find({$and: [{"lineItems.quantity": {$lt: 50}}, {"lineItems.quantity": {$gt: 5}}]})


Question 8: This is hard to explain, but the lineItems.0 points to the first object in the array because it wouldn't let me traverse with "lineItems.unitPrice". Then it made me push a new object to the array which is my unitPrice because the other one was overwritten when i tried to add it to the array as just "42.99" which deleted the unitPrice object entirely and was just a number in the array.

  db.orders.update({"_id" : ObjectId("57474c0d4101b9aa98bb8321")}, {$set:{"lineItems.0": {unitPrice: 42.99}}})


Question 9:  I abused this order in the last question and it turned into a monstrosity with unit prices everywhere, so I deleted it here. 

> db.orders.remove( {"_id" : ObjectId("57474c0d4101b9aa98bb8321")} )
